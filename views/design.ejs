<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">
    <title>IGC Climate Actions Manager</title>
    <link href='https://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css'>
    <link href='https://fonts.googleapis.com/css?family=Raleway' rel='stylesheet' type='text/css'>
    <link href='/assets/css/flatty.css' rel='stylesheet' type='text/css'>
    <link href='/assets/css/base.css' rel='stylesheet' type='text/css'>
    <link href='/assets/css/leaflet.css' rel='stylesheet' type='text/css'>
    <style type="text/css">


    </style>
</head>

<body>

    <div class='herounit'>
        <div class="container">
            <!-- Static navbar -->
            <!-- Main component for a primary marketing message or call to action -->
            <br>
            <h1># IGC Climate Actions </h1>
            <br>
            <p>This is tool to apply multiple climate actions to diagrams in a Geodesignhub project via the <a
                    href="http://www.geodesignhub.com/api/" target="_blank">Geodesignhub API</a>. When a new set of tags
                is applied, the existing tags will be removed from the diagram. For more information, see the <a
                    href="https://geodesignhub.github.io/TagsHelper">Github</a> page.</p><br>

        </div>
    </div>
    <br>
    <div class="container">
            <div class="row">
            <h2>Instructions</h2><br>
            <p>Select the tags that you want to apply on the right hand side to the diagrams on the right hand side (you can select multiple tags) and assign to multiple diagrams. Use the search box to filter diagrams and finally confirm your selections. </p>
            <hr>
            </div>
            <div class="row">
                <div class="column">
                    <br>
                    <h2>Step 1. Select a Diagram from your design</h2>
                    <p>Click on any diagram on the map.</p>
                    <br>
                    <section>
                        <div id="map"></div>
                    </section>                   

                    <section>
                        <div id="diagrams-list">s
                                <ul class="list">
                                    <% var diag_len=data[1]['features'].length; if (diag_len !==0) { for (var j=0; j < diag_len; j++ ) {
                                        var current_feature=data[1]['features'][j]; 
                                        let added_diagrams= [];                                     
                                        
                                        var feature_props = current_feature['properties'];
                                        var diagram_id = feature_props['diagramid'];                                        
                                    %>
                                        <li>                                        
                                        
                                            <% if (added_diagrams.includes(diagram_id)) { } else { %>
                                                <span class="hidden diagram_id"><%- diagram_id %></span>    
                                                    <p><%= feature_props.sysname %>
                                                    <span class="name"> <%= feature_props.description %></span>
                                                            <% let tag_codes = feature_props.tag_codes;
                                                            if (tag_codes)
                                                            {
                                                            let tag_codes_split = tag_codes.split("|");
                                                            for (var i=0; i < tag_codes_split.length; i++) { %>
                                                                <small class="highlight">&nbsp;<%= tag_codes_split[i]%>&nbsp;</small>&nbsp;&nbsp;
                                                                <% added_diagrams.push(diagram_id); 
                                                            }} %>
                                                        </p>
                                            <% } %>
                                        </li>
                                        <% }} %>
                                </ul>
                                <br>
                                <button onclick="showAllDiagrams()">Show all Diagrams</button>
                                <br>
                        </div>

                    </section>
                </div>
                
                <div class="column">
                    <section>
                        <h2>Step 2. Apply Climate Actions</h2>
                        <p>A list of all climate actions defined in Geodesignhub for your project are below, select up to three climate actions.</p>
                        <br>
                        <div id="tags-list">
                            <ul class="list">
                                <% var tags_len=data[2].length; if (tags_len !==0) { for (var j1=0; j1 < tags_len; j1++
                                    ) { var current_tag=data[2][j1]; %>
                                    <li>
                                        <p id="cont-<%=current_tag.id %>"><input type="checkbox"
                                                value="<%= current_tag.id %>" id="<%= current_tag.id %>" name="tags">
                                                <small class="highlight">&nbsp;<%= current_tag.code %>&nbsp;</small>&nbsp;<%= current_tag.tag %>
                                        </p>
                                    </li>
                                    <% } } %>

                            </ul>
                        </div>
                    </section>
                </div>
            </div>
                
            <input type="hidden" name="api_token" value="<%= api_token %>" />
            <input type="hidden" name="project_id" value="<%= project_id %>" />
    
                <div class="row">

                    <section>
                        <br>
                        <h2>Step 3: Confirm</h2>
                        <br>
                        <button type="submit" class="button">Update Tags</button>
                    </section>
                </div>
            </div>
            

    </div>
    <br>
    <br><br>
    <hr><br><br>
    <script src="/assets/js/humane.min.js"></script>
    <script src="/assets/js/leaflet.js"></script>
    <script src="/assets/js/svg/svg.min.js"></script>
    <script src="/assets/js/list.min.js"></script>
  
</body>
<script type="text/javascript">
    
    var options = {
        valueNames: [ 'diagram_id']
        
        };
    var diagramsList = new List('diagrams-list', options);
    let map_state ={};
    let map = L.map('map', {
        zoomControl: true,
        minZoom: 6,
        maxZoom: 18,
        scrollWheelZoom: false,
        dragging: false,
        zoomControl: false,
        doubleClickZoom: false,
        attributionControl: false});
    let bnds = '<%= bounds %>';
    const design_gj = <%- JSON.stringify(data[1]) %>;
    const tag_details = <%- JSON.stringify(data[2]) %>;
    let b = bnds.split(',');
    
    map.fitBounds([[b[1], b[0]],[b[3], b[2]]]);


    var svgDrawing = SVG().addTo('body').size(10, 10);

    var designLayer = new L.FeatureGroup();
    var inputbaseLayer = L.tileLayer('https://{s}.basemaps.cartocdn.com/rastertiles/light_all/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, &copy; <a href="https://cartodb.com/attributions">CartoDB</a>',
        maxZoom: 18,
    }).addTo(map);

    function filterDiagramList(diagram_id){
        diagramsList.filter(function(item) {               
            if (item.values().diagram_id == diagram_id) {
                return true;
            } else {
                return false;
            }
        });
    }    
    function showAllDiagrams(){
        diagramsList.filter();
    }
    function miniMapstyleComp(feature) {
        var curFeature = feature.geometry.type;
        if (curFeature === 'LineString') {
            // console.log(feature)
            return {
                weight: 2,
                opacity: .9,
                color: feature.properties.color,
                dashArray: '',

            };
        } else {
            if (feature.properties.areatype == 'project') {
                var fillColor = feature.properties.color;
            } else { // it is policy
                var fillPattern = setSVGStyle(feature.properties.color);
                var fillColor = fillPattern;
            }

            return {
                weight: 1,
                stroke: true,
                opacity: 0.9,
                fillColor: fillColor,
                color: feature.properties.color,
                dashArray: '',
                // opacity: 0.2,
                fillOpacity: 0.8,
            };
        }
    }
    function setSVGStyle(reqColor) {
        var pattern = svgDrawing.pattern(6, 6, function (add) {
            // add.rect(5, 5).fill(reqColor)
            add.line(0, 0, 6, 6).stroke({
                width: 1,
                color: reqColor
            })
        });
        return pattern;
    }

    function onEachFeature(feature, layer) {
        if (feature.properties && feature.properties.description) {
            layer.bindPopup(feature.properties.description);
            // Filter the list with the diagram ID
            let diagram_id = feature.properties.diagramid;
            let tag_codes = feature.properties.tag_codes;
            map_state[diagram_id] = tag_codes;
            
            layer.on('click', function (e) {
                // e = event
                let diagram_id = e.target.feature.properties.diagramid;
                filterDiagramList(diagram_id);
                // show existing tag codes
                let tag_codes = e.target.feature.properties.tag_codes;
                let tag_codes_sel = tag_codes.split('|');

                let tag_details_length = tag_details.length;
                //uncheck everything
            
                var checkboxes = document.getElementsByName('tags');
                for (var checkbox of checkboxes) {
                    checkbox.checked = false;
                }

                for (let index = 0; index < tag_codes_sel.length; index++) {
                    const selected_code = tag_codes_sel[index];
                    for (let idx2 = 0; idx2 < tag_details_length; idx2++) {
                        const current_tag = tag_details[idx2];
                        if (current_tag.code == selected_code) {
                            document.getElementById(current_tag.id).checked = true;
                            break
                        }                    
                    }
                }
            });
        }
    }
    L.geoJSON(design_gj, {
        onEachFeature: onEachFeature,
        style: miniMapstyleComp,
    }).addTo(map);

    // Render tag codes 


</script>

</html>